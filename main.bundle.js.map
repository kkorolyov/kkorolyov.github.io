{"version":3,"sources":["webpack:///./src/app/project/component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/component.ts","webpack:///./src/app/module.ts","webpack:///./src/app/nav/component.ts","webpack:///./src/app/routing.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/nav/styles.css","webpack:///./src/app/project/styles.css","webpack:///./src/app/nav/template.html","webpack:///./src/app/project/template.html","webpack:///./src/app/template.html","webpack:///./src/app/services/project-parser.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core'\nimport { ActivatedRoute } from '@angular/router'\n\nimport { Project } from 'types'\n\n@Component({\n  selector: 'kgi-project',\n  templateUrl: './template.html',\n  styleUrls: ['./styles.css']\n})\nexport class ProjectComponent implements OnInit {\n  @Input() project: Project\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.data\n      .subscribe((data: { project: Project }) => {\n        this.project = data.project\n      })\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/project/component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 154;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 154\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { RootModule } from './app/module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(RootModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'kgi-root',\n  templateUrl: './template.html'\n})\nexport class RootComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/component.ts","import { BrowserModule } from '@angular/platform-browser'\nimport { NgModule } from '@angular/core'\nimport { FormsModule } from '@angular/forms'\nimport { HttpModule } from '@angular/http'\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap'\n\nimport { RoutingModule } from 'app/routing'\n\nimport { ProjectParserService } from 'app/services/project-parser'\n\nimport { RootComponent } from './component'\nimport { NavComponent } from './nav/component';\nimport { ProjectComponent } from './project/component';\n\n@NgModule({\n\timports: [\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tHttpModule,\n\t\tNgbModule.forRoot(),\n\t\tRoutingModule\n\t],\n\tdeclarations: [\n\t\tRootComponent,\n\t\tProjectComponent,\n\t\tNavComponent\n\t],\n\tproviders: [\n\t\tProjectParserService\n\t],\n\tbootstrap: [RootComponent]\n})\nexport class RootModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/module.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { NgbTabChangeEvent } from '@ng-bootstrap/ng-bootstrap'\n\nimport { ProjectParserService } from 'app/services/project-parser'\n\nimport { Project } from 'types'\n\n@Component({\n  selector: 'kgi-nav',\n  templateUrl: './template.html',\n  styleUrls: ['./styles.css']\n})\nexport class NavComponent {\n  projects: Project[]\n\n  constructor(private router: Router, private projectParser: ProjectParserService) {\n    this.projectParser.getAll()\n      .subscribe(projects => this.projects = projects)\n  }\n\n  go(name: string): void {\n    this.router.navigate(['/project', name])\n  }\n  tabChange(event: NgbTabChangeEvent): void {\n    this.go(event.nextId)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/component.ts","import { NgModule, Injectable } from '@angular/core'\nimport { RouterModule, ActivatedRouteSnapshot, RouterStateSnapshot, Resolve } from '@angular/router'\n\nimport { ProjectParserService } from 'app/services/project-parser'\n\nimport { ProjectComponent } from 'app/project/component'\n\nimport { Project } from 'types'\n\n@Injectable()\nexport class ProjectResolver implements Resolve<Project> {\n  constructor(private parser: ProjectParserService) { }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    return this.parser.get(route.params.project)\n  }\n}\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([\n      {\n        path: 'project/:project',\n        component: ProjectComponent,\n        resolve: {\n          project: ProjectResolver\n        }\n      }\n    ])\n  ],\n  providers: [ProjectResolver],\n  exports: [RouterModule]\n})\nexport class RoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routing.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/styles.css\n// module id = 223\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/styles.css\n// module id = 224\n// module chunks = 1","module.exports = \"<nav>\\n  <h1>kkorolyov's GitHub Thingies</h1>\\n\\n  <ngb-tabset (tabChange)=\\\"tabChange($event)\\\">\\n    <ngb-tab id=\\\"{{project.title}}\\\" *ngFor=\\\"let project of projects\\\">\\n      <ng-template ngbTabTitle>\\n        <h4>{{project.title}}</h4>\\n      </ng-template>\\n      <ng-template ngbTabContent></ng-template>\\n    </ngb-tab>\\n  </ngb-tabset>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/template.html\n// module id = 226\n// module chunks = 1","module.exports = \"<h1>{{project.title}}</h1>\\n<h2>{{project.description}}</h2>\\n<h4>Current version: {{project.version}}</h4>\\n\\n<a href=\\\"{{project.github}}\\\"><img src=\\\"assets/github.png\\\" alt=\\\"GitHub\\\"></a>\\n<a href=\\\"{{project.bintray.url}}\\\"><img src=\\\"{{project.bintray.badge}}\\\" alt=\\\"Bintray\\\"></a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/project/template.html\n// module id = 227\n// module chunks = 1","module.exports = \"<kgi-nav></kgi-nav>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/template.html\n// module id = 228\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http'\nimport { Observable } from 'rxjs/Observable'\nimport 'rxjs/add/operator/map'\n\nimport { Project } from 'types'\n\n@Injectable()\nexport class ProjectParserService {\n  constructor(private http: Http) { }\n\n  get(title: string): Observable<Project> {\n    return this.getAll()\n      .map(projects => projects.filter(p => p.title.indexOf(title) >= 0)[0])\n  }\n  getAll(): Observable<Project[]> {\n    return this.http.get('assets/projects.json')\n      .map(res => res.json())\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/project-parser.ts"],"sourceRoot":""}